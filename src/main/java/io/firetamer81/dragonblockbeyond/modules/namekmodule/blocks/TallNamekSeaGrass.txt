package io.firetamer81.dragonblockbeyond.modules.namekmodule.blocks;

import io.firetamer.dragonblockbeyond._modules.namek_module.NamekModule;
import net.minecraft.core.BlockPos;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.context.BlockPlaceContext;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.LevelReader;
import net.minecraft.world.level.block.TallSeagrassBlock;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.block.state.properties.DoubleBlockHalf;
import net.minecraft.world.level.material.FluidState;
import net.minecraft.world.phys.HitResult;
import org.jetbrains.annotations.Nullable;

public class TallNamekSeaGrass extends TallSeagrassBlock {

    public TallNamekSeaGrass(Properties properties) {
        super(properties);
    }

    @Nullable
    @Override
    public BlockState getStateForPlacement(BlockPlaceContext context) {

        FluidState fluidstate = context.getLevel().getFluidState(context.getClickedPos());

        return (fluidstate.getType() == NamekModule.NAMEK_FLUID_FLOWING.get()
                || fluidstate.getType() == NamekModule.NAMEK_FLUID_SOURCE.get() && fluidstate.getAmount() == 8)
                ? super.getStateForPlacement(context) : null;
    }

    @Override
    public ItemStack getCloneItemStack(BlockState state, HitResult target, BlockGetter level, BlockPos pos, Player player) {
        return new ItemStack(NamekModule.NAMEK_SEAGRASS.get());
    }

    @Override
    public FluidState getFluidState(BlockState p_154537_) {
        return NamekModule.NAMEK_FLUID_SOURCE.get().getSource(false);
    }

    public boolean canSurvive(BlockState blockState, LevelReader levelReader, BlockPos blockPos) {
        if (blockState.getValue(HALF) == DoubleBlockHalf.UPPER) {
            BlockState blockstate = levelReader.getBlockState(blockPos.below());
            return blockstate.is(this) && blockstate.getValue(HALF) == DoubleBlockHalf.LOWER;
        } else {
            FluidState fluidstate = levelReader.getFluidState(blockPos);

            return super.canSurvive(blockState, levelReader, blockPos) && fluidstate.getType() == NamekModule.NAMEK_FLUID_FLOWING.get() ||
                    fluidstate.getType() == NamekModule.NAMEK_FLUID_SOURCE.get() && fluidstate.getAmount() == 8;

            //return super.canSurvive(blockState, levelReader, blockPos) && fluidstate.is(NamekModule.NAMEK_WATER_KEY) && fluidstate.getAmount() == 8;
        }
    }
}
